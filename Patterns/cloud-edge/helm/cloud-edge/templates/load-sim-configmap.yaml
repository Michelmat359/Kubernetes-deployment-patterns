apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "cloud-edge.fullname" . }}-load-sim
  labels:
    {{- include "cloud-edge.labels" . | nindent 4 }}
data:
  {{ .Values.loadGenerator.scriptPath }}: |
    #!/usr/bin/env python3
    import os, rclpy
    from rclpy.node import Node
    from std_msgs.msg import String

    class Load(Node):
        def __init__(self):
            super().__init__('load')
            self.pub = self.create_publisher(String, 'edge_load', 10)
            rate = float(os.getenv('MESSAGE_RATE', '10'))
            self.timer = self.create_timer(1.0 / rate, self.cb)

        def cb(self):
            msg = String()
            msg.data = 'edge load message'
            self.pub.publish(msg)
            self.get_logger().info(f'Published: "{msg.data}"')

    def main():
        rclpy.init()
        node = Load()
        try:
            rclpy.spin(node)
        except KeyboardInterrupt:
            pass
        finally:
            node.destroy_node()
            rclpy.shutdown()

    if __name__ == '__main__':
        main()
