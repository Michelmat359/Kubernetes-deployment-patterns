# values.yaml para Cloud-Edge Pattern
# Configuración para kb2.cigip.upv.es (cloud) y kb-edge01.cigip.upv.es (edge)

image:
  repository: osrf/ros
  tag: humble-desktop
  pullPolicy: IfNotPresent

# Configuración ROS 2 global
ros:
  domainId: 42  # Cambiar si hay conflictos con otros sistemas ROS 2
  rmwImplementation: rmw_fastrtps_cpp
  # Configuración de red para permitir comunicación entre nodos
  cycloneDdsUri: |
    <CycloneDDS>
      <Domain>
        <General>
          <NetworkInterfaceAddress>auto</NetworkInterfaceAddress>
        </General>
      </Domain>
    </CycloneDDS>

# Nodo Cloud: Fleet Manager
cloud:
  enabled: true
  replicas: 1
  # CRÍTICO: NodeSelector para ejecutar en el nodo master
  nodeSelector:
    kubernetes.io/hostname: kb2.cigip.upv.es
  # Alternativa usando labels personalizadas
  # nodeSelector:
  #   node-role: cloud
  resources:
    requests:
      cpu: 200m
      memory: 256Mi
    limits:
      cpu: 500m
      memory: 512Mi
  # Configuración específica del Fleet Manager
  component:
    name: fleet-manager
    # Puedes personalizar el comando ROS 2 aquí
    rosPackage: demo_nodes_cpp
    rosExecutable: talker
    # Para tu aplicación real, cambiar a:
    # rosPackage: your_fleet_package
    # rosExecutable: fleet_manager_node

# Nodo Edge: Processing
edge:
  enabled: true
  replicas: 1
  # CRÍTICO: NodeSelector para ejecutar en el worker edge
  nodeSelector:
    kubernetes.io/hostname: kb-edge01.cigip.upv.es
  # Alternativa usando labels personalizadas
  # nodeSelector:
  #   node-role: edge
  resources:
    requests:
      cpu: 300m
      memory: 384Mi
    limits:
      cpu: 1000m
      memory: 1Gi
  # Configuración específica del Edge Processing
  component:
    name: edge-processing
    rosPackage: demo_nodes_cpp
    rosExecutable: listener

# Load Generator (simula carga en el edge)
loadGenerator:
  enabled: true
  messageRate: 10  # Hz
  scriptPath: load_sim.py
  topic: edge_load

# Servicios Kubernetes
service:
  type: ClusterIP
  cloud:
    port: 11311
    targetPort: 11311
  edge:
    port: 11312
    targetPort: 11312

# Configuración de red
networking:
  # Para ROS 2, DDS usa UDP multicast por defecto
  # Si hay problemas de conectividad, considerar usar Discovery Server
  useDiscoveryServer: false
  discoveryServerPort: 11888

# Monitoring (opcional)
monitoring:
  enabled: false
  prometheusPort: 9090

nameOverride: ""
fullnameOverride: ""