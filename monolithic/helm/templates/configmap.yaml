apiVersion: v1
kind: ConfigMap
metadata:
  name: {{ include "ros2-monolithic.fullname" . }}-load-sim
  labels:
    {{- include "ros2-monolithic.labels" . | nindent 4 }}
data:
  {{ .Values.loadSimulator.scriptPath }}: |
    #!/usr/bin/env python3
    import os
    import rclpy
    from rclpy.node import Node
    from std_msgs.msg import String

    class LoadSim(Node):
        def __init__(self):
            super().__init__('load_sim')
            self.publisher_ = self.create_publisher(String, 'load_chatter', 10)
            rate = float(os.getenv('MESSAGE_RATE', '10'))
            self.timer = self.create_timer(1.0 / rate, self.timer_callback)

        def timer_callback(self):
            msg = String()
            msg.data = 'load message'
            self.publisher_.publish(msg)
            self.get_logger().info(f'Published: "{msg.data}"')

    def main():
        rclpy.init()
        node = LoadSim()
        try:
            rclpy.spin(node)
        except KeyboardInterrupt:
            pass
        finally:
            node.destroy_node()
            rclpy.shutdown()

    if __name__ == '__main__':
        main()
