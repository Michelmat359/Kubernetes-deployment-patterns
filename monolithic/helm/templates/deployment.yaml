apiVersion: apps/v1
kind: Deployment
metadata:
  name: {{ include "ros2-monolithic.fullname" . }}
  labels:
    {{- include "ros2-monolithic.labels" . | nindent 4 }}
  annotations:
    prometheus.io/scrape: "true"
    prometheus.io/port: "{{ .Values.metrics.port }}"
spec:
  replicas: {{ .Values.replicaCount }}
  selector:
    matchLabels:
      app: {{ include "ros2-monolithic.name" . }}
  template:
    metadata:
      labels:
        app: {{ include "ros2-monolithic.name" . }}
    spec:
      initContainers:
      - name: install-deps
        image: { { .Values.image.repository } }:{{ .Values.image.tag }}
        command:
          - /bin/bash
          - -lc
          - |
            apt-get update && \
            apt-get install -y python3-pip && \
            pip3 install prometheus_client && \
            cp -a /usr/local/lib/python3.*/dist-packages /deps
        volumeMounts:
          - name: deps
            mountPath: /deps
      containers:
        - name: monolithic
          image: "{{ .Values.image.repository }}:{{ .Values.image.tag }}"
          imagePullPolicy: {{ .Values.image.pullPolicy }}
          command:
            - /ros_entrypoint.sh
            - python3
            - /app/monolithic.py
          env:
            - name: MESSAGE_RATE
              value: "{{ .Values.metrics.rate | default .Values.messageRate }}"
            - name: METRICS_PORT
              value: "{{ .Values.metrics.port }}"
          ports:
            - name: api
              containerPort: {{ .Values.containerPort }}
            - name: metrics
              containerPort: {{ .Values.metrics.port }}
          volumeMounts:
            - name: code
              mountPath: /app
            - name: deps
              mountPath: /usr/local/lib/python3.8/dist-packages
      volumes:
        - name: code
          configMap:
            name: {{ include "ros2-monolithic.fullname" . }}-code
            defaultMode: 0644
        - name: deps
          emptyDir: {}